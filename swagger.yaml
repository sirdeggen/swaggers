openapi: 3.0.0
info:
  title: MetaNet Client API
  version: 1.0.0
  description: This API provides a client-side authentication solution that will let your application access a few cryptographic keys that belong to your users. You can use these for client-side encryption/decryption, authentication, signing, or even creating Bitcoin transactions.
servers:
  - url: http://localhost:3301
paths:
  /v1/createAction:
    post:
      summary: Creates and broadcasts a Bitcoin transaction with the provided inputs and outputs.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                inputs:
                  type: object
                  additionalProperties:
                    type: object
                    properties:
                      outputsToRedeem:
                        type: array
                        items:
                          type: object
                          properties:
                            index:
                              type: integer
                            unlockingScript:
                              type: string
                outputs:
                  type: array
                  items:
                    type: object
                    properties:
                      satoshis:
                        type: integer
                      script:
                        type: string
                description:
                  type: string
                topics:
                  type: array
                  items:
                    type: string
                labels:
                  type: array
                  items:
                    type: string
                  default: []
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: object
                    properties:
                      txid:
                        type: string
                      rawTx:
                        type: string
                      mapiResponses:
                        type: array
                        items: {}
                      inputs:
                        type: array
                        items: {}
  /v1/waitForAuthentication:
    post:
      summary: Waits for a user to be authenticated.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: boolean
  /v1/isAuthenticated:
    get:
      summary: Checks if a user is currently authenticated.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: boolean
  /v1/encrypt:
    post:
      summary: Encrypts data with a key belonging to the user.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
        - name: returnType
          in: query
          schema:
            type: string
            default: Uint8Array
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  returnTypeOfString:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                          result:
                            type: string
                  returnTypeOfUint8Array:
                    type: string
                    format: binary
  /v1/decrypt:
    post:
      summary: Decrypts data with a key belonging to the user.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
        - name: returnType
          in: query
          schema:
            type: string
            default: Uint8Array
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  returnTypeOfString:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          status:
                            type: string
                          result:
                            type: string
                  returnTypeOfUint8Array:
                    type: string
                    format: binary
  /v1/createHmac:
    post:
      summary: Creates a SHA-256 HMAC with a key belonging to the user.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    format: binary
  /v1/verifyHmac:
    post:
      summary: Verifies that a SHA-256 HMAC was created with a key that belongs to the user.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
        - name: hmac
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: boolean
  /v1/createCertificate:
    post:
      summary: Creates a certificate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificateType:
                  type: string
                fieldObject:
                  type: object
                certifierUrl:
                  type: string
                certifierPublicKey:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: object
                    properties:
                      Authrite:
                        type: string
  /v1/proveCertificate:
    post:
      summary: Creates certificate proof specifically for verifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                certificate:
                  type: string
                fieldsToReveal:
                  type: array
                  items:
                    type: string
                verifierPublicIdentityKey:
                  type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: object
                    properties:
                      Authrite:
                        type: string
  /v1/publicKey:
    get:
      summary: Returns the public key for the current user associated with the protocolID and keyID specified.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
        - name: identityKey
          in: query
          schema:
            type: boolean
            default: false
        - name: reason
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: string
  /v1/createSignature:
    post:
      summary: Creates a digital signature with a key belonging to the user. The SHA-256 hash of the data is used with ECDSA.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: anyone
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: string
                    format: binary
  /v1/verifySignature:
    post:
      summary: Verifies that a digital signature was created with a key belonging to the user.
      parameters:
        - name: protocolID
          in: query
          required: true
          schema:
            type: string
        - name: keyID
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: counterparty
          in: query
          schema:
            type: string
            default: self
        - name: privileged
          in: query
          schema:
            type: boolean
            default: false
        - name: signature
          in: query
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              format: binary
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: boolean
  /v1/version:
    get:
      summary: Returns the current version of the kernel.
      responses:
        "200":
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  result:
                    type: string
